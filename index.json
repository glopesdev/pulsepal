{
  "api/Bonsai.PulsePal.BiphasicConfiguration.html": {
    "href": "api/Bonsai.PulsePal.BiphasicConfiguration.html",
    "title": "Class BiphasicConfiguration | Bonsai.PulsePal",
    "keywords": "Class BiphasicConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying whether the channel will produce either monophasic or biphasic square pulses. public class BiphasicConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration BiphasicConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Biphasic Gets or sets a value specifying whether to use biphasic or monophasic pulses. public bool Biphasic { get; set; } Property Value bool Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.BurstDurationConfiguration.html": {
    "href": "api/Bonsai.PulsePal.BurstDurationConfiguration.html",
    "title": "Class BurstDurationConfiguration | Bonsai.PulsePal",
    "keywords": "Class BurstDurationConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the duration of a pulse burst when using burst mode. public class BurstDurationConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration BurstDurationConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties BurstDuration Gets or sets the duration of a pulse burst, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double BurstDuration { get; set; } Property Value double Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.ChannelParameterConfiguration.html": {
    "href": "api/Bonsai.PulsePal.ChannelParameterConfiguration.html",
    "title": "Class ChannelParameterConfiguration | Bonsai.PulsePal",
    "keywords": "Class ChannelParameterConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Provides an abstract base class for configuring Pulse Pal channel parameters. public abstract class ChannelParameterConfiguration Inheritance object ChannelParameterConfiguration Derived OutputChannelParameterConfiguration TriggerChannelParameterConfiguration Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public abstract void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.ChannelTriggers.html": {
    "href": "api/Bonsai.PulsePal.ChannelTriggers.html",
    "title": "Enum ChannelTriggers | Bonsai.PulsePal",
    "keywords": "Enum ChannelTriggers Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Specifies which output channels to start on a soft-trigger command. [Flags] public enum ChannelTriggers Fields Channel1 = 1 Start stimulation on output channel 1. Channel2 = 2 Start stimulation on output channel 2. Channel3 = 4 Start stimulation on output channel 3. Channel4 = 8 Start stimulation on output channel 4."
  },
  "api/Bonsai.PulsePal.ConfigureChannelParameter.html": {
    "href": "api/Bonsai.PulsePal.ConfigureChannelParameter.html",
    "title": "Class ConfigureChannelParameter | Bonsai.PulsePal",
    "keywords": "Class ConfigureChannelParameter Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents an operator that configures a single channel parameter on a Pulse Pal device. [WorkflowElementCategory(ElementCategory.Sink)] public class ConfigureChannelParameter : PolymorphicCombinator, ICustomTypeDescriptor, INamedElement Inheritance object PolymorphicCombinator ConfigureChannelParameter Implements ICustomTypeDescriptor INamedElement Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ConfigureChannelParameter() Initializes a new instance of the ConfigureChannelParameter class. public ConfigureChannelParameter() Properties Parameter Gets or sets the channel parameter to configure. [Externalizable(false)] [TypeConverter(typeof(CombinatorTypeConverter))] public ChannelParameterConfiguration Parameter { get; set; } Property Value ChannelParameterConfiguration PortName Gets or sets the name of the serial port used to communicate with the Pulse Pal device. [TypeConverter(typeof(PortNameConverter))] public string PortName { get; set; } Property Value string Methods Process(IObservable<PulsePal>) Configures a single channel parameter on every Pulse Pal device in the observable sequence. public IObservable<PulsePal> Process(IObservable<PulsePal> source) Parameters source IObservable<PulsePal> The sequence of Pulse Pal devices to configure. Returns IObservable<PulsePal> An observable sequence that is identical to the source sequence but where there is an additional side effect of configuring a single channel parameter on each Pulse Pal device. Process<TSource>(IObservable<TSource>) Configures a single channel parameter on the Pulse Pal device whenever an observable sequence emits a notification. public IObservable<TSource> Process<TSource>(IObservable<TSource> source) Parameters source IObservable<TSource> The sequence containing the notifications used to trigger configuration of the Pulse Pal channel parameter. Returns IObservable<TSource> An observable sequence that is identical to the source sequence but where there is an additional side effect of configuring a single channel parameter on the Pulse Pal device whenever the sequence emits a notification. Type Parameters TSource The type of the elements in the source sequence."
  },
  "api/Bonsai.PulsePal.ConfigureOutputChannel.html": {
    "href": "api/Bonsai.PulsePal.ConfigureOutputChannel.html",
    "title": "Class ConfigureOutputChannel | Bonsai.PulsePal",
    "keywords": "Class ConfigureOutputChannel Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents an operator that configures output channel parameters on a Pulse Pal device. public class ConfigureOutputChannel : Sink, INamedElement Inheritance object Combinator Sink ConfigureOutputChannel Implements INamedElement Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Biphasic Gets or sets a value specifying whether to use biphasic or monophasic pulses. public bool Biphasic { get; set; } Property Value bool BurstDuration Gets or sets the duration of a pulse burst, in the range [0, 3600] seconds. If set to zero, bursts are disabled. [Range(0, 3600)] [Precision(4, 0.0001)] public double BurstDuration { get; set; } Property Value double Channel Gets or sets the output channel to configure. public OutputChannel Channel { get; set; } Property Value OutputChannel ContinuousLoop Gets or sets a value specifying whether to set the output channel in continuous loop mode. public bool ContinuousLoop { get; set; } Property Value bool CustomTrainIdentity Gets or sets a value specifying the identity of the custom pulse train to use on this output channel. public CustomTrainId CustomTrainIdentity { get; set; } Property Value CustomTrainId CustomTrainLoop Gets or sets a value specifying whether the output channel will loop its custom pulse train. public bool CustomTrainLoop { get; set; } Property Value bool CustomTrainTarget Gets or sets a value specifying the interpretation of pulse times in the custom pulse train. public CustomTrainTarget CustomTrainTarget { get; set; } Property Value CustomTrainTarget InterBurstInterval Gets or sets the duration of the off-time between bursts, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double InterBurstInterval { get; set; } Property Value double InterPhaseInterval Gets or sets the interval between the first and second phase of a biphasic pulse, in the range [0, 3600] seconds. [Range(0, 3600)] [Precision(4, 0.0001)] public double InterPhaseInterval { get; set; } Property Value double InterPulseInterval Gets or sets the interval between pulses, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double InterPulseInterval { get; set; } Property Value double Phase1Duration Gets or sets the duration of the first phase of the pulse, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double Phase1Duration { get; set; } Property Value double Phase1Voltage Gets or sets the voltage for the first phase of each pulse. [Range(-10, 10)] [Precision(3, 0.001)] public double Phase1Voltage { get; set; } Property Value double Phase2Duration Gets or sets the duration of the second phase of the pulse, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double Phase2Duration { get; set; } Property Value double Phase2Voltage Gets or sets the voltage for the second phase of each pulse. [Range(-10, 10)] [Precision(3, 0.001)] public double Phase2Voltage { get; set; } Property Value double PortName Gets or sets the name of the serial port used to communicate with the Pulse Pal device. [TypeConverter(typeof(PortNameConverter))] public string PortName { get; set; } Property Value string PulseTrainDelay Gets or sets the delay to start the pulse train, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double PulseTrainDelay { get; set; } Property Value double PulseTrainDuration Gets or sets the duration of the pulse train, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double PulseTrainDuration { get; set; } Property Value double RestingVoltage Gets or sets the resting voltage, in the range [-10, 10] volts. [Range(-10, 10)] [Precision(3, 0.001)] public double RestingVoltage { get; set; } Property Value double TriggerOnChannel1 Gets or sets a value specifying whether trigger channel 1 can trigger this output channel. public bool TriggerOnChannel1 { get; set; } Property Value bool TriggerOnChannel2 Gets or sets a value specifying whether trigger channel 2 can trigger this output channel. public bool TriggerOnChannel2 { get; set; } Property Value bool Methods Process(IObservable<PulsePal>) Configures the output channel parameters on every Pulse Pal device in the observable sequence. public IObservable<PulsePal> Process(IObservable<PulsePal> source) Parameters source IObservable<PulsePal> The sequence of Pulse Pal devices to configure. Returns IObservable<PulsePal> An observable sequence that is identical to the source sequence but where there is an additional side effect of configuring the output channel parameters on each Pulse Pal device. Process<TSource>(IObservable<TSource>) Configures the output channel parameters on the Pulse Pal device whenever an observable sequence emits a notification. public override IObservable<TSource> Process<TSource>(IObservable<TSource> source) Parameters source IObservable<TSource> The sequence containing the notifications used to trigger configuration of the Pulse Pal output channel. Returns IObservable<TSource> An observable sequence that is identical to the source sequence but where there is an additional side effect of configuring the output channel parameters on the Pulse Pal device whenever the sequence emits a notification. Type Parameters TSource The type of the elements in the source sequence. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Bonsai.PulsePal.ConfigureOutputChannelCollection.html": {
    "href": "api/Bonsai.PulsePal.ConfigureOutputChannelCollection.html",
    "title": "Class ConfigureOutputChannelCollection | Bonsai.PulsePal",
    "keywords": "Class ConfigureOutputChannelCollection Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents a collection of output channel configuration objects. public class ConfigureOutputChannelCollection : KeyedCollection<OutputChannel, ConfigureOutputChannel>, IList<ConfigureOutputChannel>, ICollection<ConfigureOutputChannel>, IList, ICollection, IReadOnlyList<ConfigureOutputChannel>, IReadOnlyCollection<ConfigureOutputChannel>, IEnumerable<ConfigureOutputChannel>, IEnumerable Inheritance object Collection<ConfigureOutputChannel> KeyedCollection<OutputChannel, ConfigureOutputChannel> ConfigureOutputChannelCollection Implements IList<ConfigureOutputChannel> ICollection<ConfigureOutputChannel> IList ICollection IReadOnlyList<ConfigureOutputChannel> IReadOnlyCollection<ConfigureOutputChannel> IEnumerable<ConfigureOutputChannel> IEnumerable Inherited Members KeyedCollection<OutputChannel, ConfigureOutputChannel>.Contains(OutputChannel) KeyedCollection<OutputChannel, ConfigureOutputChannel>.Remove(OutputChannel) KeyedCollection<OutputChannel, ConfigureOutputChannel>.ChangeItemKey(ConfigureOutputChannel, OutputChannel) KeyedCollection<OutputChannel, ConfigureOutputChannel>.ClearItems() KeyedCollection<OutputChannel, ConfigureOutputChannel>.GetKeyForItem(ConfigureOutputChannel) KeyedCollection<OutputChannel, ConfigureOutputChannel>.InsertItem(int, ConfigureOutputChannel) KeyedCollection<OutputChannel, ConfigureOutputChannel>.RemoveItem(int) KeyedCollection<OutputChannel, ConfigureOutputChannel>.SetItem(int, ConfigureOutputChannel) KeyedCollection<OutputChannel, ConfigureOutputChannel>.Comparer KeyedCollection<OutputChannel, ConfigureOutputChannel>.this[OutputChannel] KeyedCollection<OutputChannel, ConfigureOutputChannel>.Dictionary Collection<ConfigureOutputChannel>.Add(ConfigureOutputChannel) Collection<ConfigureOutputChannel>.Clear() Collection<ConfigureOutputChannel>.CopyTo(ConfigureOutputChannel[], int) Collection<ConfigureOutputChannel>.Contains(ConfigureOutputChannel) Collection<ConfigureOutputChannel>.GetEnumerator() Collection<ConfigureOutputChannel>.IndexOf(ConfigureOutputChannel) Collection<ConfigureOutputChannel>.Insert(int, ConfigureOutputChannel) Collection<ConfigureOutputChannel>.Remove(ConfigureOutputChannel) Collection<ConfigureOutputChannel>.RemoveAt(int) Collection<ConfigureOutputChannel>.ClearItems() Collection<ConfigureOutputChannel>.InsertItem(int, ConfigureOutputChannel) Collection<ConfigureOutputChannel>.RemoveItem(int) Collection<ConfigureOutputChannel>.SetItem(int, ConfigureOutputChannel) Collection<ConfigureOutputChannel>.Count Collection<ConfigureOutputChannel>.Items Collection<ConfigureOutputChannel>.this[int] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetKeyForItem(ConfigureOutputChannel) Returns the key for the specified configuration object. protected override OutputChannel GetKeyForItem(ConfigureOutputChannel item) Parameters item ConfigureOutputChannel The configuration object from which to extract the key. Returns OutputChannel The key for the specified configuration object."
  },
  "api/Bonsai.PulsePal.ConfigureTriggerChannel.html": {
    "href": "api/Bonsai.PulsePal.ConfigureTriggerChannel.html",
    "title": "Class ConfigureTriggerChannel | Bonsai.PulsePal",
    "keywords": "Class ConfigureTriggerChannel Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents an operator that configures trigger channel parameters on a Pulse Pal device. public class ConfigureTriggerChannel : Sink, INamedElement Inheritance object Combinator Sink ConfigureTriggerChannel Implements INamedElement Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Channel Gets or sets the output channel to configure. public TriggerChannel Channel { get; set; } Property Value TriggerChannel PortName Gets or sets the name of the serial port used to communicate with the Pulse Pal device. [TypeConverter(typeof(PortNameConverter))] public string PortName { get; set; } Property Value string TriggerMode Gets or sets a value specifying the behavior of the trigger channel. public TriggerMode TriggerMode { get; set; } Property Value TriggerMode Methods Process(IObservable<PulsePal>) Configures the trigger channel parameters on every Pulse Pal device in the observable sequence. public IObservable<PulsePal> Process(IObservable<PulsePal> source) Parameters source IObservable<PulsePal> The sequence of Pulse Pal devices to configure. Returns IObservable<PulsePal> An observable sequence that is identical to the source sequence but where there is an additional side effect of configuring the trigger channel parameters on each Pulse Pal device. Process<TSource>(IObservable<TSource>) Configures the trigger channel parameters on the Pulse Pal device whenever an observable sequence emits a notification. public override IObservable<TSource> Process<TSource>(IObservable<TSource> source) Parameters source IObservable<TSource> The sequence containing the notifications used to trigger configuration of the Pulse Pal trigger channel. Returns IObservable<TSource> An observable sequence that is identical to the source sequence but where there is an additional side effect of configuring the trigger channel parameters on the Pulse Pal device whenever the sequence emits a notification. Type Parameters TSource The type of the elements in the source sequence. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Bonsai.PulsePal.ConfigureTriggerChannelCollection.html": {
    "href": "api/Bonsai.PulsePal.ConfigureTriggerChannelCollection.html",
    "title": "Class ConfigureTriggerChannelCollection | Bonsai.PulsePal",
    "keywords": "Class ConfigureTriggerChannelCollection Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents a collection of trigger channel configuration objects. public class ConfigureTriggerChannelCollection : KeyedCollection<TriggerChannel, ConfigureTriggerChannel>, IList<ConfigureTriggerChannel>, ICollection<ConfigureTriggerChannel>, IList, ICollection, IReadOnlyList<ConfigureTriggerChannel>, IReadOnlyCollection<ConfigureTriggerChannel>, IEnumerable<ConfigureTriggerChannel>, IEnumerable Inheritance object Collection<ConfigureTriggerChannel> KeyedCollection<TriggerChannel, ConfigureTriggerChannel> ConfigureTriggerChannelCollection Implements IList<ConfigureTriggerChannel> ICollection<ConfigureTriggerChannel> IList ICollection IReadOnlyList<ConfigureTriggerChannel> IReadOnlyCollection<ConfigureTriggerChannel> IEnumerable<ConfigureTriggerChannel> IEnumerable Inherited Members KeyedCollection<TriggerChannel, ConfigureTriggerChannel>.Contains(TriggerChannel) KeyedCollection<TriggerChannel, ConfigureTriggerChannel>.Remove(TriggerChannel) KeyedCollection<TriggerChannel, ConfigureTriggerChannel>.ChangeItemKey(ConfigureTriggerChannel, TriggerChannel) KeyedCollection<TriggerChannel, ConfigureTriggerChannel>.ClearItems() KeyedCollection<TriggerChannel, ConfigureTriggerChannel>.GetKeyForItem(ConfigureTriggerChannel) KeyedCollection<TriggerChannel, ConfigureTriggerChannel>.InsertItem(int, ConfigureTriggerChannel) KeyedCollection<TriggerChannel, ConfigureTriggerChannel>.RemoveItem(int) KeyedCollection<TriggerChannel, ConfigureTriggerChannel>.SetItem(int, ConfigureTriggerChannel) KeyedCollection<TriggerChannel, ConfigureTriggerChannel>.Comparer KeyedCollection<TriggerChannel, ConfigureTriggerChannel>.this[TriggerChannel] KeyedCollection<TriggerChannel, ConfigureTriggerChannel>.Dictionary Collection<ConfigureTriggerChannel>.Add(ConfigureTriggerChannel) Collection<ConfigureTriggerChannel>.Clear() Collection<ConfigureTriggerChannel>.CopyTo(ConfigureTriggerChannel[], int) Collection<ConfigureTriggerChannel>.Contains(ConfigureTriggerChannel) Collection<ConfigureTriggerChannel>.GetEnumerator() Collection<ConfigureTriggerChannel>.IndexOf(ConfigureTriggerChannel) Collection<ConfigureTriggerChannel>.Insert(int, ConfigureTriggerChannel) Collection<ConfigureTriggerChannel>.Remove(ConfigureTriggerChannel) Collection<ConfigureTriggerChannel>.RemoveAt(int) Collection<ConfigureTriggerChannel>.ClearItems() Collection<ConfigureTriggerChannel>.InsertItem(int, ConfigureTriggerChannel) Collection<ConfigureTriggerChannel>.RemoveItem(int) Collection<ConfigureTriggerChannel>.SetItem(int, ConfigureTriggerChannel) Collection<ConfigureTriggerChannel>.Count Collection<ConfigureTriggerChannel>.Items Collection<ConfigureTriggerChannel>.this[int] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetKeyForItem(ConfigureTriggerChannel) Returns the key for the specified configuration object. protected override TriggerChannel GetKeyForItem(ConfigureTriggerChannel item) Parameters item ConfigureTriggerChannel The configuration object from which to extract the key. Returns TriggerChannel The key for the specified configuration object."
  },
  "api/Bonsai.PulsePal.ContinuousLoopConfiguration.html": {
    "href": "api/Bonsai.PulsePal.ContinuousLoopConfiguration.html",
    "title": "Class ContinuousLoopConfiguration | Bonsai.PulsePal",
    "keywords": "Class ContinuousLoopConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying whether to play this output channel pulse train indefinitely when triggered, without needing to be re-triggered. public class ContinuousLoopConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration ContinuousLoopConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties ContinuousLoop Gets or sets a value specifying whether to set the output channel in continuous loop mode. public bool ContinuousLoop { get; set; } Property Value bool Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.CreatePulsePal.html": {
    "href": "api/Bonsai.PulsePal.CreatePulsePal.html",
    "title": "Class CreatePulsePal | Bonsai.PulsePal",
    "keywords": "Class CreatePulsePal Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents an operator that creates and configures a serial connection to a Pulse Pal device. public class CreatePulsePal : Source<PulsePal>, INamedElement Inheritance object Source<PulsePal> CreatePulsePal Implements INamedElement Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Name Gets or sets the optional alias for the Pulse Pal device. public string Name { get; set; } Property Value string OutputChannels Gets the collection of output channels to configure on the Pulse Pal device. public ConfigureOutputChannelCollection OutputChannels { get; } Property Value ConfigureOutputChannelCollection PortName Gets or sets the name of the serial port used to communicate with the Pulse Pal. [TypeConverter(typeof(SerialPortNameConverter))] public string PortName { get; set; } Property Value string TriggerChannels Gets the collection of trigger channels to configure on the Pulse Pal device. public ConfigureTriggerChannelCollection TriggerChannels { get; } Property Value ConfigureTriggerChannelCollection Methods Generate() Generates an observable sequence that contains the serial interface object. public override IObservable<PulsePal> Generate() Returns IObservable<PulsePal> A sequence containing a single instance of the PulsePal class representing the serial interface to Pulse Pal."
  },
  "api/Bonsai.PulsePal.CustomPulseTrain.html": {
    "href": "api/Bonsai.PulsePal.CustomPulseTrain.html",
    "title": "Class CustomPulseTrain | Bonsai.PulsePal",
    "keywords": "Class CustomPulseTrain Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents an operator that creates a sequence of custom pulse trains. public class CustomPulseTrain : Combinator<PulseOnset[]> Inheritance object Combinator<PulseOnset[]> CustomPulseTrain Inherited Members Combinator<PulseOnset[]>.Process<TSource>(IObservable<TSource>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties PulseTrain Gets the collection of pulse train onset times and voltages specifying the custom pulse train. public Collection<PulseOnset> PulseTrain { get; } Property Value Collection<PulseOnset> Methods Process() Creates an observable sequence containing a single custom pulse train. public IObservable<PulseOnset[]> Process() Returns IObservable<PulseOnset[]> A sequence containing a single array of pulse onset times and voltages representing the custom pulse train. Process<TSource>(IObservable<TSource>) Creates an observable sequence of custom pulse trains where each train is created whenever another sequence emits a notification. public override IObservable<PulseOnset[]> Process<TSource>(IObservable<TSource> source) Parameters source IObservable<TSource> The sequence containing the notifications used for emitting new custom pulse trains. Returns IObservable<PulseOnset[]> A sequence containing arrays of pulse onset times and voltages representing the custom pulse trains. Type Parameters TSource The type of the elements in the source sequence."
  },
  "api/Bonsai.PulsePal.CustomTrainId.html": {
    "href": "api/Bonsai.PulsePal.CustomTrainId.html",
    "title": "Enum CustomTrainId | Bonsai.PulsePal",
    "keywords": "Enum CustomTrainId Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Specifies the identity of custom pulse trains. public enum CustomTrainId Fields CustomTrain1 = 1 Use custom train 1. CustomTrain2 = 2 Use custom train 2. None = 0 No custom train is used."
  },
  "api/Bonsai.PulsePal.CustomTrainIdentityConfiguration.html": {
    "href": "api/Bonsai.PulsePal.CustomTrainIdentityConfiguration.html",
    "title": "Class CustomTrainIdentityConfiguration | Bonsai.PulsePal",
    "keywords": "Class CustomTrainIdentityConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the identity of the custom train used to specify pulse times and voltages on an output channel. public class CustomTrainIdentityConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration CustomTrainIdentityConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CustomTrainIdentity Gets or sets a value specifying the identity of the custom pulse train to use on this output channel. public CustomTrainId CustomTrainIdentity { get; set; } Property Value CustomTrainId Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.CustomTrainLoopConfiguration.html": {
    "href": "api/Bonsai.PulsePal.CustomTrainLoopConfiguration.html",
    "title": "Class CustomTrainLoopConfiguration | Bonsai.PulsePal",
    "keywords": "Class CustomTrainLoopConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying whether the output channel will loop its custom pulse train. public class CustomTrainLoopConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration CustomTrainLoopConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CustomTrainLoop Gets or sets a value specifying whether the output channel will loop its custom pulse train. public bool CustomTrainLoop { get; set; } Property Value bool Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.CustomTrainTarget.html": {
    "href": "api/Bonsai.PulsePal.CustomTrainTarget.html",
    "title": "Enum CustomTrainTarget | Bonsai.PulsePal",
    "keywords": "Enum CustomTrainTarget Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Specifies the interpretation of pulse times in a custom pulse train. public enum CustomTrainTarget Fields BurstOnset = 1 Pulse times specify pulse burst onsets. PulseOnset = 0 Pulse times specify the pulse onset."
  },
  "api/Bonsai.PulsePal.CustomTrainTargetConfiguration.html": {
    "href": "api/Bonsai.PulsePal.CustomTrainTargetConfiguration.html",
    "title": "Class CustomTrainTargetConfiguration | Bonsai.PulsePal",
    "keywords": "Class CustomTrainTargetConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the interpretation of pulse times in the custom train configured on this output channel. public class CustomTrainTargetConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration CustomTrainTargetConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CustomTrainTarget Gets or sets a value specifying the interpretation of pulse times in the custom pulse train. public CustomTrainTarget CustomTrainTarget { get; set; } Property Value CustomTrainTarget Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.InterBurstIntervalConfiguration.html": {
    "href": "api/Bonsai.PulsePal.InterBurstIntervalConfiguration.html",
    "title": "Class InterBurstIntervalConfiguration | Bonsai.PulsePal",
    "keywords": "Class InterBurstIntervalConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the duration of the off-time between bursts. public class InterBurstIntervalConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration InterBurstIntervalConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties InterBurstInterval Gets or sets the duration of the off-time between bursts, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double InterBurstInterval { get; set; } Property Value double Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.InterPhaseIntervalConfiguration.html": {
    "href": "api/Bonsai.PulsePal.InterPhaseIntervalConfiguration.html",
    "title": "Class InterPhaseIntervalConfiguration | Bonsai.PulsePal",
    "keywords": "Class InterPhaseIntervalConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the interval between the first and second phases of biphasic pulses. public class InterPhaseIntervalConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration InterPhaseIntervalConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties InterPhaseInterval Gets or sets the interval between the first and second phase of a biphasic pulse, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double InterPhaseInterval { get; set; } Property Value double Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.InterPulseIntervalConfiguration.html": {
    "href": "api/Bonsai.PulsePal.InterPulseIntervalConfiguration.html",
    "title": "Class InterPulseIntervalConfiguration | Bonsai.PulsePal",
    "keywords": "Class InterPulseIntervalConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the interval between pulses. public class InterPulseIntervalConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration InterPulseIntervalConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties InterPulseInterval Gets or sets the interval between pulses, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double InterPulseInterval { get; set; } Property Value double Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.OutputChannel.html": {
    "href": "api/Bonsai.PulsePal.OutputChannel.html",
    "title": "Enum OutputChannel | Bonsai.PulsePal",
    "keywords": "Enum OutputChannel Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Specifies the output channel on a Pulse Pal device. public enum OutputChannel : byte Fields Channel1 = 1 The output channel 1. Channel2 = 2 The output channel 2. Channel3 = 3 The output channel 3. Channel4 = 4 The output channel 4."
  },
  "api/Bonsai.PulsePal.OutputChannelParameterConfiguration.html": {
    "href": "api/Bonsai.PulsePal.OutputChannelParameterConfiguration.html",
    "title": "Class OutputChannelParameterConfiguration | Bonsai.PulsePal",
    "keywords": "Class OutputChannelParameterConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Provides an abstract base class for configuring Pulse Pal output channel parameters. public abstract class OutputChannelParameterConfiguration : ChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration Derived BiphasicConfiguration BurstDurationConfiguration ContinuousLoopConfiguration CustomTrainIdentityConfiguration CustomTrainLoopConfiguration CustomTrainTargetConfiguration InterBurstIntervalConfiguration InterPhaseIntervalConfiguration InterPulseIntervalConfiguration Phase1DurationConfiguration Phase1VoltageConfiguration Phase2DurationConfiguration Phase2VoltageConfiguration PulseTrainDelayConfiguration PulseTrainDurationConfiguration RestingVoltageConfiguration TriggerOnChannel1Configuration TriggerOnChannel2Configuration Inherited Members ChannelParameterConfiguration.Configure(PulsePal) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Channel Gets or sets a value specifying the output channel to configure. public OutputChannel Channel { get; set; } Property Value OutputChannel"
  },
  "api/Bonsai.PulsePal.Phase1DurationConfiguration.html": {
    "href": "api/Bonsai.PulsePal.Phase1DurationConfiguration.html",
    "title": "Class Phase1DurationConfiguration | Bonsai.PulsePal",
    "keywords": "Class Phase1DurationConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the duration for the first phase of each pulse. public class Phase1DurationConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration Phase1DurationConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Phase1Duration Gets or sets the duration of the first phase of the pulse, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double Phase1Duration { get; set; } Property Value double Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.Phase1VoltageConfiguration.html": {
    "href": "api/Bonsai.PulsePal.Phase1VoltageConfiguration.html",
    "title": "Class Phase1VoltageConfiguration | Bonsai.PulsePal",
    "keywords": "Class Phase1VoltageConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the voltage for the first phase of each pulse. public class Phase1VoltageConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration Phase1VoltageConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Phase1Voltage Gets or sets the voltage for the first phase of each pulse. [Range(-10, 10)] [Precision(3, 0.001)] public double Phase1Voltage { get; set; } Property Value double Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.Phase2DurationConfiguration.html": {
    "href": "api/Bonsai.PulsePal.Phase2DurationConfiguration.html",
    "title": "Class Phase2DurationConfiguration | Bonsai.PulsePal",
    "keywords": "Class Phase2DurationConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the duration for the second phase of each pulse. public class Phase2DurationConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration Phase2DurationConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Phase2Duration Gets or sets the duration of the second phase of the pulse, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double Phase2Duration { get; set; } Property Value double Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.Phase2VoltageConfiguration.html": {
    "href": "api/Bonsai.PulsePal.Phase2VoltageConfiguration.html",
    "title": "Class Phase2VoltageConfiguration | Bonsai.PulsePal",
    "keywords": "Class Phase2VoltageConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the voltage for the second phase of each pulse. public class Phase2VoltageConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration Phase2VoltageConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Phase2Voltage Gets or sets the voltage for the second phase of each pulse. [Range(-10, 10)] [Precision(3, 0.001)] public double Phase2Voltage { get; set; } Property Value double Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.PolymorphicCombinator.html": {
    "href": "api/Bonsai.PulsePal.PolymorphicCombinator.html",
    "title": "Class PolymorphicCombinator | Bonsai.PulsePal",
    "keywords": "Class PolymorphicCombinator Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Provides an abstract base class for polymorphic combinators. [Combinator] public abstract class PolymorphicCombinator : ICustomTypeDescriptor Inheritance object PolymorphicCombinator Implements ICustomTypeDescriptor Derived ConfigureChannelParameter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/Bonsai.PulsePal.PulseOnset.html": {
    "href": "api/Bonsai.PulsePal.PulseOnset.html",
    "title": "Class PulseOnset | Bonsai.PulsePal",
    "keywords": "Class PulseOnset Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents an operator that creates a sequence of custom pulse train onset times and voltages. public class PulseOnset : Combinator<PulseOnset> Inheritance object Combinator<PulseOnset> PulseOnset Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Time Gets or sets the pulse onset time, in seconds relative to the start of the pulse. [Range(0, 3600)] [Precision(4, 0.0001)] public double Time { get; set; } Property Value double Voltage Gets or sets the pulse onset voltage, in volts. [Range(-10, 10)] [Precision(3, 0.001)] public double Voltage { get; set; } Property Value double Methods Process() Creates an observable sequence containing a single pulse train onset configured with the specified time and voltage. public IObservable<PulseOnset> Process() Returns IObservable<PulseOnset> A sequence containing the created PulseOnset object. Process<TSource>(IObservable<TSource>) Creates an observable sequence of pulse train onset times and voltages, where each pulse onset is emitted only when an observable sequence emits a notification. public override IObservable<PulseOnset> Process<TSource>(IObservable<TSource> source) Parameters source IObservable<TSource> The sequence containing the notifications used for emitting new pulse onset times and voltages. Returns IObservable<PulseOnset> A sequence containing the created PulseOnset objects whenever the source emits notifications. Type Parameters TSource The type of the elements in the source sequence. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Bonsai.PulsePal.PulsePal.html": {
    "href": "api/Bonsai.PulsePal.PulsePal.html",
    "title": "Class PulsePal | Bonsai.PulsePal",
    "keywords": "Class PulsePal Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents a Pulse Pal device. public sealed class PulsePal : IDisposable Inheritance object PulsePal Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors PulsePal(string) Initializes a new instance of the PulsePal class using the specified port name. public PulsePal(string portName) Parameters portName string The name of the serial port used to communicate with the Pulse Pal device. Properties FirmwareVersion Gets the version of the firmware used by the Pulse Pal device. public int FirmwareVersion { get; } Property Value int IsOpen Gets a value indicating the open or closed status of the PulsePal object. public bool IsOpen { get; } Property Value bool Methods AbortPulseTrains() Terminates all pulse trains currently playing on the device. public void AbortPulseTrains() Close() Closes the port connection, sets the IsOpen property to false and disposes of the internal SerialPort object. public void Close() Open(CancellationToken) Opens a new serial port connection to the Pulse Pal device. public void Open(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken which can be used to cancel the operation. SendCustomPulseTrain(CustomTrainId, PulseOnset[]) Sends a sequence of onset times and voltages describing a train of pulses. public void SendCustomPulseTrain(CustomTrainId id, PulseOnset[] pulseTrain) Parameters id CustomTrainId The identity of the custom pulse train to program. pulseTrain PulseOnset[] The array specifying all pulse onset times and voltages, respectively in seconds and volts. Remarks Pulses that are continuous or overlapping will merge. If an output channel is set to produce biphasic pulses, the voltage specified for each pulse is sign-inverted for the second phase, i.e. if +5 V is used for phase 1, -5 V is used automatically for phase 2. Exceptions ArgumentException The specified pulse train id is invalid. ArgumentNullException pulseTrain is null. ArgumentOutOfRangeException The maximum length of 1,000 pulses has been exceeded. SendCustomPulseTrain(CustomTrainId, double[,]) Sends a sequence of onset times and voltages describing a train of pulses. public void SendCustomPulseTrain(CustomTrainId id, double[,] pulseTrain) Parameters id CustomTrainId The identity of the custom pulse train to program. pulseTrain double[,] A rectangular array of pulse times and pulse voltages, where the first row represents the vector of pulse onset times in seconds, and the second row the corresponding vector of pulse voltages in volts. Exceptions ArgumentException The specified pulse train id is invalid.-or- pulseTrain does not have exactly two rows. ArgumentNullException pulseTrain is null. ArgumentOutOfRangeException The maximum length of 1,000 pulses has been exceeded. SendCustomPulseTrain(CustomTrainId, double[], double[]) Sends a sequence of onset times and voltages describing a train of pulses. public void SendCustomPulseTrain(CustomTrainId id, double[] pulseTimes, double[] pulseVoltages) Parameters id CustomTrainId The identity of the custom pulse train to program. pulseTimes double[] The array of pulse onset times, where each time is specified in seconds from the start of the pulse train. pulseVoltages double[] The array of pulse voltages, with one voltage per pulse. Remarks Pulses that are continuous or overlapping will merge. If an output channel is set to produce biphasic pulses, the voltage specified for each pulse is sign-inverted for the second phase, i.e. if +5 V is used for phase 1, -5 V is used automatically for phase 2. Exceptions ArgumentException The specified pulse train id is invalid. ArgumentNullException Either pulseTimes or pulseVoltages is null. ArgumentOutOfRangeException The maximum length of 1,000 pulses has been exceeded. SendCustomWaveform(CustomTrainId, double, double[]) Sends a sequence of voltages describing a train of continuous monophasic pulses, with periodic onset times. public void SendCustomWaveform(CustomTrainId id, double samplingPeriod, double[] pulseVoltages) Parameters id CustomTrainId The identity of the custom pulse train to program. samplingPeriod double The width of all pulses in the train in the range [0.0001, 3600] seconds. Pulses are continuous. pulseVoltages double[] The array of pulse voltages, with one voltage per pulse. Exceptions ArgumentOutOfRangeException samplingPeriod is outside the range [0.0001, 3600] seconds.-or- The maximum length of 1,000 pulses has been exceeded. ArgumentNullException pulseVoltages is null. SetBiphasic(OutputChannel, bool) Sets the specified output channel to produce either monophasic or biphasic square pulses. public void SetBiphasic(OutputChannel channel, bool isBiphasic) Parameters channel OutputChannel The output channel to configure. isBiphasic bool true to produce biphasic pulses; false to produce monophasic pulses. SetBurstDuration(OutputChannel, double) Sets the duration of a pulse burst when using burst mode. public void SetBurstDuration(OutputChannel channel, double seconds) Parameters channel OutputChannel The output channel to configure. seconds double The duration of a pulse burst, in the range [0.0001, 3600] seconds. Burst mode is automatically disabled if this value is set to zero. SetClientId(string) Sets a 6-character string to indicate the connected application's name, at the top of the PulsePal's thumb joystick menu tree. public void SetClientId(string id) Parameters id string A text string identifying the connected application. The text must be 6 or less characters in length. SetContinuousLoop(OutputChannel, bool) Sets an output channel to play its pulse train indefinitely when triggered, without needing to be re-triggered. public void SetContinuousLoop(OutputChannel channel, bool loop) Parameters channel OutputChannel The output channel to configure. loop bool true to set the output channel in continuous loop mode; false otherwise. SetCustomTrainIdentity(OutputChannel, CustomTrainId) Sets the identity of the custom train used to specify pulse times and voltages on an output channel. public void SetCustomTrainIdentity(OutputChannel channel, CustomTrainId trainId) Parameters channel OutputChannel The output channel to configure. trainId CustomTrainId The identity of the custom pulse train to use on the specified output channel. SetCustomTrainLoop(OutputChannel, bool) Sets an output channel to loop its custom pulse train. public void SetCustomTrainLoop(OutputChannel channel, bool loop) Parameters channel OutputChannel The output channel to configure. loop bool true if the output channel should loop its custom pulse train for the duration specified by SetPulseTrainDuration(OutputChannel, double); otherwise, the pulse train ends after its final pulse. SetCustomTrainTarget(OutputChannel, CustomTrainTarget) Sets the interpretation of pulse times in the custom train configured on the specified output channel. public void SetCustomTrainTarget(OutputChannel channel, CustomTrainTarget target) Parameters channel OutputChannel The output channel to configure. target CustomTrainTarget The interpretation of pulse times in the custom pulse train. SetFixedVoltage(OutputChannel, double) Sets a constant voltage on an output channel. public void SetFixedVoltage(OutputChannel channel, double volts) Parameters channel OutputChannel The output channel to configure. volts double The voltage to set on the output channel, in the range [-10, 10] volts. SetInterBurstInterval(OutputChannel, double) Sets the duration of the off-time between bursts. public void SetInterBurstInterval(OutputChannel channel, double seconds) Parameters channel OutputChannel The output channel to configure. seconds double The duration of the off-time between bursts, in the range [0.0001, 3600] seconds. SetInterPhaseInterval(OutputChannel, double) Sets the interval between the first and second phases of biphasic pulses on a specified output channel. public void SetInterPhaseInterval(OutputChannel channel, double seconds) Parameters channel OutputChannel The output channel to configure. seconds double The interval between the first and second phase of a biphasic pulse, in the range [0.0001, 3600] seconds. SetInterPulseInterval(OutputChannel, double) Sets the interval between pulses on a specified output channel. public void SetInterPulseInterval(OutputChannel channel, double seconds) Parameters channel OutputChannel The output channel to configure. seconds double The interval between pulses, in the range [0.0001, 3600] seconds. SetPhase1Duration(OutputChannel, double) Sets the duration for the first phase of each pulse on a specified output channel. public void SetPhase1Duration(OutputChannel channel, double seconds) Parameters channel OutputChannel The output channel to configure. seconds double The duration of the first phase of the pulse, in the range [0.0001, 3600] seconds. SetPhase1Voltage(OutputChannel, double) Sets the voltage for the first phase of each pulse on a specified output channel. public void SetPhase1Voltage(OutputChannel channel, double volts) Parameters channel OutputChannel The output channel to configure. volts double The voltage of the first phase of the pulse, in the range [-10, 10] volts. SetPhase2Duration(OutputChannel, double) Sets the duration for the second phase of each pulse on a specified output channel. public void SetPhase2Duration(OutputChannel channel, double seconds) Parameters channel OutputChannel The output channel to configure. seconds double The duration of the second phase of the pulse, in the range [0.0001, 3600] seconds. SetPhase2Voltage(OutputChannel, double) Sets the voltage for the second phase of each pulse on a specified output channel. public void SetPhase2Voltage(OutputChannel channel, double volts) Parameters channel OutputChannel The output channel to configure. volts double The voltage of the second phase of the pulse, in the range [-10, 10] volts. SetPulseTrainDelay(OutputChannel, double) Sets a delay between the arrival of a trigger and when the channel begins its pulse train. public void SetPulseTrainDelay(OutputChannel channel, double seconds) Parameters channel OutputChannel The output channel to configure. seconds double The delay to start the pulse train, in the range [0.0001, 3600] seconds. SetPulseTrainDuration(OutputChannel, double) Sets the duration of the entire pulse train. public void SetPulseTrainDuration(OutputChannel channel, double seconds) Parameters channel OutputChannel The output channel to configure. seconds double The duration of the pulse train, in the range [0.0001, 3600] seconds. SetRestingVoltage(OutputChannel, double) Sets the resting voltage on a specified output channel, i.e. the voltage between phases, pulses and pulse trains. public void SetRestingVoltage(OutputChannel channel, double volts) Parameters channel OutputChannel The output channel to configure. volts double The resting voltage, in the range [-10, 10] volts. SetTriggerMode(TriggerChannel, TriggerMode) Sets the behavior of a trigger channel. public void SetTriggerMode(TriggerChannel channel, TriggerMode triggerMode) Parameters channel TriggerChannel The trigger channel to configure. triggerMode TriggerMode Specifies the behavior of the trigger channel. SetTriggerOnChannel1(OutputChannel, bool) Links or unlinks an output channel to trigger channel 1. public void SetTriggerOnChannel1(OutputChannel channel, bool enabled) Parameters channel OutputChannel The output channel to link or unlink. enabled bool true if trigger channel 1 can trigger this output channel; false otherwise. SetTriggerOnChannel2(OutputChannel, bool) Links or unlinks an output channel to trigger channel 2. public void SetTriggerOnChannel2(OutputChannel channel, bool enabled) Parameters channel OutputChannel The output channel to link or unlink. enabled bool true if trigger channel 2 can trigger this output channel; false otherwise. TriggerOutputChannels(ChannelTriggers) Begins the stimulation pulse train on the specified output channels. public void TriggerOutputChannels(ChannelTriggers channels) Parameters channels ChannelTriggers Specifies which output channels to start. UpdateDisplay(string) Writes a text string to the Pulse Pal oLED display. public void UpdateDisplay(string text) Parameters text string A text string to display on the top row of the oLED display. Text must be less than 17 characters in length. UpdateDisplay(string, string) Writes text strings to the Pulse Pal oLED display. public void UpdateDisplay(string row1, string row2) Parameters row1 string A text string to display on the top row of the oLED display. Text must be less than 17 characters in length. row2 string An optional text string to display on the bottom row of the oLED display. Text must be less than 17 characters in length."
  },
  "api/Bonsai.PulsePal.PulseTrainDelayConfiguration.html": {
    "href": "api/Bonsai.PulsePal.PulseTrainDelayConfiguration.html",
    "title": "Class PulseTrainDelayConfiguration | Bonsai.PulsePal",
    "keywords": "Class PulseTrainDelayConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the delay between the arrival of a trigger and when the channel begins its pulse train. public class PulseTrainDelayConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration PulseTrainDelayConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties PulseTrainDelay Gets or sets the delay to start the pulse train, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double PulseTrainDelay { get; set; } Property Value double Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.PulseTrainDurationConfiguration.html": {
    "href": "api/Bonsai.PulsePal.PulseTrainDurationConfiguration.html",
    "title": "Class PulseTrainDurationConfiguration | Bonsai.PulsePal",
    "keywords": "Class PulseTrainDurationConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the duration of the entire pulse train. public class PulseTrainDurationConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration PulseTrainDurationConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties PulseTrainDuration Gets or sets the duration of the pulse train, in the range [0.0001, 3600] seconds. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double PulseTrainDuration { get; set; } Property Value double Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.RestingVoltageConfiguration.html": {
    "href": "api/Bonsai.PulsePal.RestingVoltageConfiguration.html",
    "title": "Class RestingVoltageConfiguration | Bonsai.PulsePal",
    "keywords": "Class RestingVoltageConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the resting voltage on this output channel, i.e. the voltage between phases, pulses and pulse trains. public class RestingVoltageConfiguration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration RestingVoltageConfiguration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties RestingVoltage Gets or sets the resting voltage, in the range [-10, 10] volts. [Range(-10, 10)] [Precision(3, 0.001)] public double RestingVoltage { get; set; } Property Value double Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.SendCustomPulseTrain.html": {
    "href": "api/Bonsai.PulsePal.SendCustomPulseTrain.html",
    "title": "Class SendCustomPulseTrain | Bonsai.PulsePal",
    "keywords": "Class SendCustomPulseTrain Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents an operator that uploads each custom pulse train in the sequence to the Pulse Pal device. public class SendCustomPulseTrain : Sink<PulseOnset[]> Inheritance object Combinator<PulseOnset[], PulseOnset[]> Sink<PulseOnset[]> SendCustomPulseTrain Inherited Members Combinator<PulseOnset[], PulseOnset[]>.Process(IObservable<PulseOnset[]>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CustomTrainIdentity Gets or sets the identity of the custom pulse train to program. public CustomTrainId CustomTrainIdentity { get; set; } Property Value CustomTrainId PortName Gets or sets the name of the serial port used to communicate with the Pulse Pal device. [TypeConverter(typeof(PortNameConverter))] public string PortName { get; set; } Property Value string Methods Process(IObservable<PulseOnset[]>) Uploads each custom pulse train in an observable sequence to the Pulse Pal device, where each pulse train is specified by an array of pulse onset times and voltages. public override IObservable<PulseOnset[]> Process(IObservable<PulseOnset[]> source) Parameters source IObservable<PulseOnset[]> A sequence of custom pulse trains, where each pulse train is specified by an array of pulse onset times and voltages. Returns IObservable<PulseOnset[]> An observable sequence that is identical to the source sequence but where there is an additional side effect of uploading each custom pulse train in the sequence to the Pulse Pal device. Process(IObservable<Mat>) Uploads each custom pulse train in an observable sequence to the Pulse Pal device, where each pulse train is specified by a matrix of pulse onset times and voltages. public IObservable<Mat> Process(IObservable<Mat> source) Parameters source IObservable<Mat> A sequence of custom pulse trains, where each pulse train is specified by a matrix of pulse onset times and voltages. The first row of the matrix represents the vector of pulse onset times in seconds, and the second row the corresponding vector of pulse voltages in volts. Returns IObservable<Mat> An observable sequence that is identical to the source sequence but where there is an additional side effect of uploading each custom pulse train in the sequence to the Pulse Pal device. Process(IObservable<double[,]>) Uploads each custom pulse train in an observable sequence to the Pulse Pal device, where each pulse train is specified by a rectangular array of pulse onset times and voltages. public IObservable<double[,]> Process(IObservable<double[,]> source) Parameters source IObservable<double[,]> A sequence of custom pulse trains, where each pulse train is specified by a rectangular array of pulse onset times and voltages. The first row of the array represents the vector of pulse onset times in seconds, and the second row the corresponding vector of pulse voltages in volts. Returns IObservable<double[,]> An observable sequence that is identical to the source sequence but where there is an additional side effect of uploading each custom pulse train in the sequence to the Pulse Pal device."
  },
  "api/Bonsai.PulsePal.SendCustomWaveform.html": {
    "href": "api/Bonsai.PulsePal.SendCustomWaveform.html",
    "title": "Class SendCustomWaveform | Bonsai.PulsePal",
    "keywords": "Class SendCustomWaveform Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents an operator that uploads each array of voltages in a sequence to the Pulse Pal device, where each array specifies a custom train of continuous monophasic pulses, with periodic onset times. public class SendCustomWaveform : Sink<Mat> Inheritance object Combinator<Mat, Mat> Sink<Mat> SendCustomWaveform Inherited Members Combinator<Mat, Mat>.Process(IObservable<Mat>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CustomTrainIdentity Gets or sets the identity of the custom pulse train to program. public CustomTrainId CustomTrainIdentity { get; set; } Property Value CustomTrainId PortName Gets or sets the name of the serial port used to communicate with the Pulse Pal device. [TypeConverter(typeof(PortNameConverter))] public string PortName { get; set; } Property Value string SamplingPeriod Gets or sets the sample rate, in Hz, used to playback the custom pulse train. [Range(0.0001, 3600)] [Precision(4, 0.0001)] public double SamplingPeriod { get; set; } Property Value double Methods Process(IObservable<Mat>) Uploads each vector of voltages in an observable sequence to the Pulse Pal device, where each vector specifies a custom train of continuous monophasic pulses, with periodic onset times. public override IObservable<Mat> Process(IObservable<Mat> source) Parameters source IObservable<Mat> A sequence of custom pulse trains, where each pulse train is specified by a row or column vector of pulse voltages. The vector of pulse onset times is automatically computed from the specified sample rate. Returns IObservable<Mat> An observable sequence that is identical to the source sequence but where there is an additional side effect of uploading each custom pulse train in the sequence to the Pulse Pal device. Process(IObservable<double[]>) Uploads each array of voltages in an observable sequence to the Pulse Pal device, where each array specifies a custom train of continuous monophasic pulses, with periodic onset times. public IObservable<double[]> Process(IObservable<double[]> source) Parameters source IObservable<double[]> A sequence of custom pulse trains, where each pulse train is specified by an array of pulse voltages. The vector of pulse onset times is automatically computed from the specified sample rate. Returns IObservable<double[]> An observable sequence that is identical to the source sequence but where there is an additional side effect of uploading each custom pulse train in the sequence to the Pulse Pal device."
  },
  "api/Bonsai.PulsePal.SetFixedVoltage.html": {
    "href": "api/Bonsai.PulsePal.SetFixedVoltage.html",
    "title": "Class SetFixedVoltage | Bonsai.PulsePal",
    "keywords": "Class SetFixedVoltage Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents an operator that sets a constant voltage on an output channel. public class SetFixedVoltage : Sink Inheritance object Combinator Sink SetFixedVoltage Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Channel Gets or sets a value specifying the output channel to set to a fixed voltage. public OutputChannel Channel { get; set; } Property Value OutputChannel PortName Gets or sets the name of the serial port used to communicate with the Pulse Pal device. [TypeConverter(typeof(PortNameConverter))] public string PortName { get; set; } Property Value string Voltage Gets or sets the constant voltage for the output channel. [Range(-10, 10)] [Precision(3, 0.001)] public double Voltage { get; set; } Property Value double Methods Process<TSource>(IObservable<TSource>) Sets a constant voltage on an output channel in the Pulse Pal device whenever an observable sequence emits a notification. public override IObservable<TSource> Process<TSource>(IObservable<TSource> source) Parameters source IObservable<TSource> The sequence containing the notifications used to set the fixed voltage on the specified Pulse Pal channel. Returns IObservable<TSource> An observable sequence that is identical to the source sequence but where there is an additional side effect of setting a single channel on the Pulse Pal device to a constant voltage whenever the sequence emits a notification. Type Parameters TSource The type of the elements in the source sequence."
  },
  "api/Bonsai.PulsePal.TriggerChannel.html": {
    "href": "api/Bonsai.PulsePal.TriggerChannel.html",
    "title": "Enum TriggerChannel | Bonsai.PulsePal",
    "keywords": "Enum TriggerChannel Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Specifies the trigger channel on a Pulse Pal device. public enum TriggerChannel : byte Fields Channel1 = 1 The trigger channel 1. Channel2 = 2 The trigger channel 2."
  },
  "api/Bonsai.PulsePal.TriggerChannelParameterConfiguration.html": {
    "href": "api/Bonsai.PulsePal.TriggerChannelParameterConfiguration.html",
    "title": "Class TriggerChannelParameterConfiguration | Bonsai.PulsePal",
    "keywords": "Class TriggerChannelParameterConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Provides an abstract base class for configuring Pulse Pal trigger channel parameters. public abstract class TriggerChannelParameterConfiguration : ChannelParameterConfiguration Inheritance object ChannelParameterConfiguration TriggerChannelParameterConfiguration Derived TriggerModeConfiguration Inherited Members ChannelParameterConfiguration.Configure(PulsePal) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Channel Gets or sets a value specifying the output channel to configure. public TriggerChannel Channel { get; set; } Property Value TriggerChannel"
  },
  "api/Bonsai.PulsePal.TriggerMode.html": {
    "href": "api/Bonsai.PulsePal.TriggerMode.html",
    "title": "Enum TriggerMode | Bonsai.PulsePal",
    "keywords": "Enum TriggerMode Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Specifies the behavior of a trigger channel. public enum TriggerMode Fields Normal = 0 Rising edge triggers linked channels, and subsequent trigger pulses are ignored. PulseGated = 2 Rising edge triggers linked channels, and falling edge stops linked channels. Toggle = 1 Rising edge triggers linked channels, and subsequent trigger pulses stop linked channels."
  },
  "api/Bonsai.PulsePal.TriggerModeConfiguration.html": {
    "href": "api/Bonsai.PulsePal.TriggerModeConfiguration.html",
    "title": "Class TriggerModeConfiguration | Bonsai.PulsePal",
    "keywords": "Class TriggerModeConfiguration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying the behavior of a trigger channel. public class TriggerModeConfiguration : TriggerChannelParameterConfiguration Inheritance object ChannelParameterConfiguration TriggerChannelParameterConfiguration TriggerModeConfiguration Inherited Members TriggerChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties TriggerMode Gets or sets a value specifying the behavior of a trigger channel. public TriggerMode TriggerMode { get; set; } Property Value TriggerMode Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.TriggerOnChannel1Configuration.html": {
    "href": "api/Bonsai.PulsePal.TriggerOnChannel1Configuration.html",
    "title": "Class TriggerOnChannel1Configuration | Bonsai.PulsePal",
    "keywords": "Class TriggerOnChannel1Configuration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying whether trigger channel 1 can trigger the output channel. public class TriggerOnChannel1Configuration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration TriggerOnChannel1Configuration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties TriggerOnChannel1 Gets or sets a value specifying whether trigger channel 1 can trigger this output channel. public bool TriggerOnChannel1 { get; set; } Property Value bool Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.TriggerOnChannel2Configuration.html": {
    "href": "api/Bonsai.PulsePal.TriggerOnChannel2Configuration.html",
    "title": "Class TriggerOnChannel2Configuration | Bonsai.PulsePal",
    "keywords": "Class TriggerOnChannel2Configuration Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents configuration parameters specifying whether trigger channel 2 can trigger the output channel. public class TriggerOnChannel2Configuration : OutputChannelParameterConfiguration Inheritance object ChannelParameterConfiguration OutputChannelParameterConfiguration TriggerOnChannel2Configuration Inherited Members OutputChannelParameterConfiguration.Channel object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties TriggerOnChannel2 Gets or sets a value specifying whether trigger channel 2 can trigger this output channel. public bool TriggerOnChannel2 { get; set; } Property Value bool Methods Configure(PulsePal) Applies the channel parameter configuration to the specified Pulse Pal device. public override void Configure(PulsePal device) Parameters device PulsePal The Pulse Pal device to configure."
  },
  "api/Bonsai.PulsePal.TriggerOutputChannels.html": {
    "href": "api/Bonsai.PulsePal.TriggerOutputChannels.html",
    "title": "Class TriggerOutputChannels | Bonsai.PulsePal",
    "keywords": "Class TriggerOutputChannels Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents an operator that triggers the specified output channels to begin playing their pulse sequences. public class TriggerOutputChannels : Sink Inheritance object Combinator Sink TriggerOutputChannels Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Channels Gets or sets a value specifying which output channel triggers to set. public ChannelTriggers Channels { get; set; } Property Value ChannelTriggers PortName Gets or sets the name of the serial port used to communicate with the Pulse Pal device. [TypeConverter(typeof(PortNameConverter))] public string PortName { get; set; } Property Value string Methods Process<TSource>(IObservable<TSource>) Triggers the specified output channels on the Pulse Pal device whenever an observable sequence emits a notification. public override IObservable<TSource> Process<TSource>(IObservable<TSource> source) Parameters source IObservable<TSource> The sequence containing the notifications used to trigger the output channels on the Pulse Pal device. Returns IObservable<TSource> An observable sequence that is identical to the source sequence but where there is an additional side effect of triggering the specified output channels on the Pulse Pal device whenever the sequence emits a notification. Type Parameters TSource The type of the elements in the source sequence."
  },
  "api/Bonsai.PulsePal.UpdateDisplay.html": {
    "href": "api/Bonsai.PulsePal.UpdateDisplay.html",
    "title": "Class UpdateDisplay | Bonsai.PulsePal",
    "keywords": "Class UpdateDisplay Namespace Bonsai.PulsePal Assembly Bonsai.PulsePal.dll Represents an operator that writes a sequence of text strings to the Pulse Pal oLED display. public class UpdateDisplay : Sink<string> Inheritance object Combinator<string, string> Sink<string> UpdateDisplay Inherited Members Combinator<string, string>.Process(IObservable<string>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties PortName Gets or sets the name of the serial port used to communicate with the Pulse Pal device. [TypeConverter(typeof(PortNameConverter))] public string PortName { get; set; } Property Value string Methods Process(IObservable<string>) Writes an observable sequence of text strings to the Pulse Pal oLED display. public override IObservable<string> Process(IObservable<string> source) Parameters source IObservable<string> A sequence where each value represents a text string to display on the top row of the oLED display. Text must be less than 17 characters in length. Returns IObservable<string> An observable sequence that is identical to the source sequence but where there is an additional side effect of writing each text string to the Pulse Pal oLED display. Process(IObservable<Tuple<string, string>>) Writes an observable sequence of text strings to the Pulse Pal oLED display. public IObservable<Tuple<string, string>> Process(IObservable<Tuple<string, string>> source) Parameters source IObservable<Tuple<string, string>> A sequence where each value represents a pair of text strings to display respectively on the top and bottom rows of the oLED display. The text in each row must be less than 17 characters in length. Returns IObservable<Tuple<string, string>> An observable sequence that is identical to the source sequence but where there is an additional side effect of writing each pair of text strings to the top and bottom rows of the Pulse Pal oLED display."
  },
  "api/Bonsai.PulsePal.html": {
    "href": "api/Bonsai.PulsePal.html",
    "title": "Namespace Bonsai.PulsePal | Bonsai.PulsePal",
    "keywords": "Namespace Bonsai.PulsePal Classes BiphasicConfiguration Represents configuration parameters specifying whether the channel will produce either monophasic or biphasic square pulses. BurstDurationConfiguration Represents configuration parameters specifying the duration of a pulse burst when using burst mode. ChannelParameterConfiguration Provides an abstract base class for configuring Pulse Pal channel parameters. ConfigureChannelParameter Represents an operator that configures a single channel parameter on a Pulse Pal device. ConfigureOutputChannel Represents an operator that configures output channel parameters on a Pulse Pal device. ConfigureOutputChannelCollection Represents a collection of output channel configuration objects. ConfigureTriggerChannel Represents an operator that configures trigger channel parameters on a Pulse Pal device. ConfigureTriggerChannelCollection Represents a collection of trigger channel configuration objects. ContinuousLoopConfiguration Represents configuration parameters specifying whether to play this output channel pulse train indefinitely when triggered, without needing to be re-triggered. CreatePulsePal Represents an operator that creates and configures a serial connection to a Pulse Pal device. CustomPulseTrain Represents an operator that creates a sequence of custom pulse trains. CustomTrainIdentityConfiguration Represents configuration parameters specifying the identity of the custom train used to specify pulse times and voltages on an output channel. CustomTrainLoopConfiguration Represents configuration parameters specifying whether the output channel will loop its custom pulse train. CustomTrainTargetConfiguration Represents configuration parameters specifying the interpretation of pulse times in the custom train configured on this output channel. InterBurstIntervalConfiguration Represents configuration parameters specifying the duration of the off-time between bursts. InterPhaseIntervalConfiguration Represents configuration parameters specifying the interval between the first and second phases of biphasic pulses. InterPulseIntervalConfiguration Represents configuration parameters specifying the interval between pulses. OutputChannelParameterConfiguration Provides an abstract base class for configuring Pulse Pal output channel parameters. Phase1DurationConfiguration Represents configuration parameters specifying the duration for the first phase of each pulse. Phase1VoltageConfiguration Represents configuration parameters specifying the voltage for the first phase of each pulse. Phase2DurationConfiguration Represents configuration parameters specifying the duration for the second phase of each pulse. Phase2VoltageConfiguration Represents configuration parameters specifying the voltage for the second phase of each pulse. PolymorphicCombinator Provides an abstract base class for polymorphic combinators. PulseOnset Represents an operator that creates a sequence of custom pulse train onset times and voltages. PulsePal Represents a Pulse Pal device. PulseTrainDelayConfiguration Represents configuration parameters specifying the delay between the arrival of a trigger and when the channel begins its pulse train. PulseTrainDurationConfiguration Represents configuration parameters specifying the duration of the entire pulse train. RestingVoltageConfiguration Represents configuration parameters specifying the resting voltage on this output channel, i.e. the voltage between phases, pulses and pulse trains. SendCustomPulseTrain Represents an operator that uploads each custom pulse train in the sequence to the Pulse Pal device. SendCustomWaveform Represents an operator that uploads each array of voltages in a sequence to the Pulse Pal device, where each array specifies a custom train of continuous monophasic pulses, with periodic onset times. SetFixedVoltage Represents an operator that sets a constant voltage on an output channel. TriggerChannelParameterConfiguration Provides an abstract base class for configuring Pulse Pal trigger channel parameters. TriggerModeConfiguration Represents configuration parameters specifying the behavior of a trigger channel. TriggerOnChannel1Configuration Represents configuration parameters specifying whether trigger channel 1 can trigger the output channel. TriggerOnChannel2Configuration Represents configuration parameters specifying whether trigger channel 2 can trigger the output channel. TriggerOutputChannels Represents an operator that triggers the specified output channels to begin playing their pulse sequences. UpdateDisplay Represents an operator that writes a sequence of text strings to the Pulse Pal oLED display. Enums ChannelTriggers Specifies which output channels to start on a soft-trigger command. CustomTrainId Specifies the identity of custom pulse trains. CustomTrainTarget Specifies the interpretation of pulse times in a custom pulse train. OutputChannel Specifies the output channel on a Pulse Pal device. TriggerChannel Specifies the trigger channel on a Pulse Pal device. TriggerMode Specifies the behavior of a trigger channel."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Introduction | Bonsai.PulsePal",
    "keywords": "Introduction Bonsai.PulsePal is a Bonsai interface for the Pulse Pal open source pulse train generator. All device configuration and triggering functionality is exposed via reactive operators. Installing the package To install Bonsai.PulsePal use the Bonsai package manager and search for the Bonsai - PulsePal package."
  },
  "articles/overview.html": {
    "href": "articles/overview.html",
    "title": "| Bonsai.PulsePal",
    "keywords": "Bonsai.PulsePal is a Bonsai interface for the Pulse Pal open source pulse train generator. All device configuration and triggering functionality is exposed via reactive operators. Installing the package To install Bonsai.PulsePal use the Bonsai package manager and search for the Bonsai - PulsePal package."
  },
  "index.html": {
    "href": "index.html",
    "title": "Bonsai - PulsePal Documentation | Bonsai.PulsePal",
    "keywords": "Bonsai - PulsePal Documentation Bonsai.PulsePal is a Bonsai interface for the Pulse Pal open source pulse train generator. All device configuration and triggering functionality is exposed via reactive operators. Installing the package To install Bonsai.PulsePal use the Bonsai package manager and search for the Bonsai - PulsePal package. Warning These docs are under active development, feel free to contribute by either raising an issue or following the links to Edit this page."
  }
}